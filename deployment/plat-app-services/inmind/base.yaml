# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nginx-config
# data:
#   nginx.conf: |
#     user nginx;
#     worker_processes auto;
#     error_log /var/log/nginx/error.log warn;
#     pid /var/run/nginx.pid;

#     events {
#         worker_connections 1024;
#     }

#     http {
#         server {
#             client_max_body_size        20000M;
#             proxy_connect_timeout       600;
#             proxy_send_timeout          600;
#             proxy_read_timeout          600;
#             send_timeout                600;

#             listen 80;

#             location / {
#                 proxy_pass http://maingui:80;
#             }

#             location /mqtt
#             {
#                 proxy_http_version 1.1;
#                 proxy_set_header Upgrade $http_upgrade;
#                 proxy_set_header Connection "upgrade";
#                 proxy_set_header Host $host;

#                 proxy_pass http://localbroker:8000;
#             }

#             location /wsext
#             {
#                 proxy_http_version 1.1;
#                 proxy_set_header Upgrade $http_upgrade;
#                 proxy_set_header Connection "upgrade";
#                 proxy_set_header Host $host;

#                 proxy_pass http://node-red:34123;
#             }

#             location  /node-red  {
#                 proxy_set_header Host $http_host;
#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_http_version 1.1;
#                 proxy_set_header Upgrade $http_upgrade;
#                 proxy_set_header Connection "upgrade";
#                 proxy_pass http://node-red:1880;
#             }

#             location '/.well-known/acme-challenge' {
#                 root /var/www/html;
#             }

#             location /mainapi/ {
#                 rewrite ^/mainapi/?(.*) /$1 break;
#                 proxy_set_header Host $host;
#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 #Aggiunto i seguenti per pbm SSE http come descritto al seguente link

#                 proxy_set_header Connection '';
#                 proxy_http_version 1.1;
#                 chunked_transfer_encoding off;
#                 proxy_buffering off;
#                 proxy_cache off;
#                 proxy_read_timeout 86400s; 
#                 proxy_pass http://mainapi:5001/;
#             }

#             location /serversdata/ {
#                 alias /serversdata;
#                 try_files $uri $uri/ =404;
#                 add_header Cache-Control 'public';
#                 add_header Access-Control-Allow-Origin *;
#                 if_modified_since off;
#                 expires off;
#                 etag off;
#             }
#         }
#     }

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: reverseproxy
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: reverseproxy
#   template:
#     metadata:
#       labels:
#         app: reverseproxy
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:latest
#         ports:
#         - containerPort: 80
#         volumeMounts:
#         - name: nginx-config
#           mountPath: /etc/nginx/nginx.conf
#           subPath: nginx.conf
#         - name: data-volume
#           mountPath: /serversdata
#           subPath: Storage
#       volumes:
#       - name: nginx-config
#         configMap:
#           name: nginx-config
#       - name: data-volume
#         persistentVolumeClaim:
#           claimName: data-volume  # Update this with your PVC name

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: reverseproxy
# spec:
#   type: NodePort
#   ports:
#   - port: 80
#     targetPort: 80
#     nodePort: 35332
#   selector:
#     app: reverseproxy


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mainapi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /mainapi/(.*)
        pathType: Prefix
        backend:
          service:
            name: mainapi
            port:
              number: 5001
