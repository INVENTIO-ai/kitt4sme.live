
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log debug; # Imposta il livello di log su debug per gli errori
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log /var/log/nginx/access.log main;

        server {
            client_max_body_size        20000M;
            proxy_connect_timeout       600;
            proxy_send_timeout          600;
            proxy_read_timeout          600;
            send_timeout                600;

            listen 80;


            location /mqtt
            {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;

                proxy_pass http://localbroker:8000;
            }

            location /wsext
            {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;

                proxy_pass http://node-red:34123;
            }

            location  /node-red  {
                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_pass http://node-red:1880;
            }

            location '/.well-known/acme-challenge' {
                root /var/www/html;
            }

            location /mainapi2 {
                rewrite ^/mainapi2?(.*) /$1 break;

                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://mainapi:5001;
            }

            location /serversdata/ {
                alias /serversdata;
                try_files $uri $uri/ =404;
                add_header Cache-Control 'public';
                add_header Access-Control-Allow-Origin *;
                if_modified_since off;
                expires off;
                etag off;
            }

            location / {
                try_files $uri $uri/ =404;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://maingui:80;
            }
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverseproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverseproxy
  template:
    metadata:
      labels:
        app: reverseproxy
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: data-volume
          mountPath: /serversdata
          subPath: Storage
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-volume

---

apiVersion: v1
kind: Service
metadata:
  name: reverseproxy
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 35332
  selector:
    app: reverseproxy


---

apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: "inmind-gateway"
spec:
  selector:
    istio: reverseproxy
  servers:
  - hosts:
    - "reverseproxy.default.svc.cluster.local"
    port:
      name: http
      number: 80
      protocol: HTTP
    tls:
      httpsRedirect: false

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: "inmind-virtual-service"
spec:
  gateways:
  - "inmind-gateway"
  hosts:
  - "reverseproxy.default.svc.cluster.local"
  http:
  - match:  # NOTE (1)
    - uri:
        prefix: /mainapi2/
    - uri:
        prefix: /mainapi2
    rewrite:
      uri: /
    route:
    - destination:
        host: mainapi.default.svc.cluster.local
        port:
          number: 5001


