
## ------------ main gui

apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: maingui-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 35332
      name: maingui-port
      protocol: HTTP
    hosts:
    - "*"

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: maingui-virtual-service
spec:
  hosts:
  - "*"
  gateways:
  - maingui-gateway
  http:
  - match:
    - uri:
        prefix: "/mainapi"
    - uri:
        prefix: "/mainapi/"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: mainapi
        port:
          number: 5001

  - match:
    - uri:
        prefix: "/mqtt"
    route:
    - destination:
        host: localbroker
        port:
          number: 8000
    #websocketUpgrade: true # enable upgrade to WebSocket
    
  - match:
    - uri:
        prefix: "/node-red"
    route:
    - destination:
        host: node-red
        port:
          number: 1880

  - match:
    - uri:
        prefix: "/wsext"
    route:
    - destination:
        host: node-red
        port:
          number: 34123
    #websocketUpgrade: true  # enable upgrade to WebSocket

  - match:
    - uri:
        prefix: "/tester"
    route:
    - destination:
        host: node-red
        port:
          number: 1880

  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: maingui
        port:
          number: 80

## ------------ main gui end

---

## ------------ licence gui
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: licencegui-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 35340
      name: licencegui-port
      protocol: HTTP
    hosts:
    - "*"


---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: licencegui-virtual-service
spec:
  hosts:
  - "*"
  gateways:
  - licencegui-gateway
  http:
  - match:
    - uri:
        prefix: "/licenceapi"
    - uri:
        prefix: "/licenceapi/"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: licence-manager-api
        port:
          number: 5002

  - match:
    - uri:
        prefix: "/wslicenceapi"
    route:
    - destination:
        host: licence-manager-api
        port:
          number: 5003
    #websocketUpgrade: true # Abilita l'upgrade a WebSocket per questo percorso


  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: licence-manager-gui
        port:
          number: 80


## ------------ licence gui end 
---

## ------------ internal reverse proxy

apiVersion: v1
kind: Service
metadata:
  name: reverseproxy
spec:
  selector:
    app: reverseproxy # Assicurati che questo corrisponda ai selettori dei pod del servizio `mainapi`
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80 # Supponendo che i pod `mainapi` ascoltino su questa porta per il traffico interno

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: reverseproxy-virtual-service
spec:
  hosts:
    - reverseproxy # Usa il nome del servizio interno `mainapiinternal`
  http:
  - match:
    - uri:
        prefix: "/mainapi"
    - uri:
        prefix: "/mainapi/"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: mainapi
        port:
          number: 5001

  - match:
    - uri:
        prefix: "/mqtt"
    route:
    - destination:
        host: localbroker
        port:
          number: 8000
    #websocketUpgrade: true # enable upgrade to WebSocket
    
  - match:
    - uri:
        prefix: "/node-red"
    route:
    - destination:
        host: node-red
        port:
          number: 1880

  - match:
    - uri:
        prefix: "/wsext"
    route:
    - destination:
        host: node-red
        port:
          number: 34123
    #websocketUpgrade: true  # enable upgrade to WebSocket

  - tester:
    - uri:
        prefix: "/node-red"
    route:
    - destination:
        host: node-red
        port:
          number: 1880

  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: maingui
        port:
          number: 80

## ------------ internal reverse proxy end

